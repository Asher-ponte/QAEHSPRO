

"use client"

import React from "react";
import { format } from "date-fns";

interface UserProgress {
    id: number;
    username: string;
    fullName: string;
    department: string;
    progress: number;
    completionDate: string | null;
}

interface AttendanceReportProps {
    courseTitle: string;
    users: UserProgress[];
}

const USERS_PER_PAGE = 20;

export const AttendanceReport: React.FC<AttendanceReportProps> = ({ courseTitle, users }) => {
    const totalPages = Math.ceil(users.length / USERS_PER_PAGE) || 1;

    return (
        <>
            {Array.from({ length: totalPages }).map((_, pageIndex) => {
                const start = pageIndex * USERS_PER_PAGE;
                const end = start + USERS_PER_PAGE;
                const pageUsers = users.slice(start, end);

                return (
                    <div key={pageIndex} id={`attendance-report-page-${pageIndex}`} className="attendance-report-page bg-white text-black p-8 font-sans w-full" style={{ breakAfter: 'page' }}>
                        <div className="text-center mb-8">
                            <h1 className="text-2xl font-bold uppercase">{courseTitle}</h1>
                            <h2 className="text-lg font-semibold">Attendance & Completion Report</h2>
                            <p className="text-sm">Generated on: {format(new Date(), "MMMM d, yyyy")}</p>
                        </div>
                        <table className="w-full border-collapse text-sm">
                            <thead>
                                <tr className="bg-gray-200">
                                    <th className="border p-2 text-left w-12">No.</th>
                                    <th className="border p-2 text-left">Full Name</th>
                                    <th className="border p-2 text-left">Department</th>
                                    <th className="border p-2 text-left w-48">Date of Completion</th>
                                </tr>
                            </thead>
                            <tbody>
                                {pageUsers.map((user, index) => (
                                    <tr key={user.id}>
                                        <td className="border p-2 text-center">{start + index + 1}</td>
                                        <td className="border p-2">{user.fullName || user.username}</td>
                                        <td className="border p-2">{user.department || 'N/A'}</td>
                                        <td className="border p-2">
                                            {user.completionDate ? format(new Date(user.completionDate), "MMM d, yyyy") : "Not Completed"}
                                        </td>
                                    </tr>
                                ))}
                                {/* Add blank rows if less than USERS_PER_PAGE users on this page */}
                                {Array.from({ length: Math.max(0, USERS_PER_PAGE - pageUsers.length) }).map((_, index) => (
                                    <tr key={`blank-${index}`}>
                                        <td className="border p-2 text-center">{start + pageUsers.length + index + 1}</td>
                                        <td className="border p-2"></td>
                                        <td className="border p-2"></td>
                                        <td className="border p-2"></td>
                                    </tr>
                                ))}
                            </tbody>
                        </table>
                        <div className="flex justify-between mt-8 text-xs text-gray-500">
                            <p>Generated by: QAEHS PRO ACADEMY</p>
                            <p>Page {pageIndex + 1} of {totalPages}</p>
                        </div>
                    </div>
                );
            })}
        </>
    );
};
